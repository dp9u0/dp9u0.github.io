<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dengpeng Guo</title>
  <subtitle>You&#39;ll Never Walk Alone</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://baochen.name:4000/"/>
  <updated>2017-03-21T14:41:17.562Z</updated>
  <id>http://baochen.name:4000/</id>
  
  <author>
    <name>Dengpeng Guo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sql server 锁</title>
    <link href="http://baochen.name:4000/2017/03/21/sql-server-locks/"/>
    <id>http://baochen.name:4000/2017/03/21/sql-server-locks/</id>
    <published>2017-03-21T14:12:11.000Z</published>
    <updated>2017-03-21T14:41:17.562Z</updated>
    
    <content type="html"><![CDATA[<p>介绍SQL Server 的锁</p>
<a id="more"></a>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li><a href="#准备">准备</a></li>
<li><a href="#关于锁">关于锁</a></li>
<li><a href="#锁资源和兼容性">锁资源和兼容性</a></li>
<li><a href="#sqlserver事务隔离级别">sqlserver事务隔离级别</a></li>
<li><a href="#事务隔离级别和锁释放">事务隔离级别和锁释放</a></li>
<li><a href="#监视锁释放">监视锁释放</a></li>
<li><a href="#实际查询中锁的申请与释放">实际查询中锁的申请与释放</a><ul>
<li><a href="#SELECT">SELECT</a></li>
<li><a href="#UPDATE">UPDATE</a></li>
<li><a href="#DELETE">DELETE</a></li>
<li><a href="#INSERT">INSERT</a></li>
</ul>
</li>
</ul>
<p>#准备</p>
<p>下载巨硬提供的<a href="https://msftdbprodsamples.codeplex.com/" target="_blank" rel="external">AdventureWorks</a>,下载的是<a href="https://msftdbprodsamples.codeplex.com/releases/view/125550" target="_blank" rel="external">2014版本</a>.是bak文件，直接恢复数据库就可以了.</p>
<p>如果比较旧的版本，例如2008R2，提供的是下载的是 mdf和ldf.可以用CRTEATE DATABASE 命令，从文件创建：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> AdventureWorks</div><div class="line"><span class="keyword">ON</span> (FILENAME = <span class="string">'C:\Data\AdventureWorks2008R2_Data.mdf'</span>), (FILENAME = <span class="string">'C:\Data\AdventureWorks2008R2_Log.ldf'</span>) <span class="keyword">FOR</span> ATTACH;</div></pre></td></tr></table></figure>
<p>创建完成后，创建需要的表：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="comment">----------------------------------------------B树表聚集索引表-------------------------------------------</span></div><div class="line"><span class="keyword">USE</span> [AdventureWorks]</div><div class="line"><span class="keyword">GO</span></div><div class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span> ( <span class="keyword">SELECT</span> TABLE_NAME <span class="keyword">FROM</span> INFORMATION_SCHEMA.TABLES <span class="keyword">WHERE</span> TABLE_NAME = <span class="string">'Employee_Demo_BTree'</span>)</div><div class="line">  <span class="keyword">DROP</span> <span class="keyword">TABLE</span> Employee_Demo_BTree</div><div class="line"><span class="keyword">GO</span></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Employee_Demo_BTree(</div><div class="line">  EmployeeID <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,</div><div class="line">  NationalIDNumber <span class="keyword">NVARCHAR</span>(<span class="number">15</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  ContactID <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  LoginID <span class="keyword">NVARCHAR</span>(<span class="number">256</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  ManagerID <span class="built_in">INT</span> <span class="literal">NULL</span>,</div><div class="line">  Title <span class="keyword">NVARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  BirthDate DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  MaritalStatus <span class="keyword">NCHAR</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  Gender <span class="keyword">NCHAR</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  HireDate DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  ModifiedDate DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">GETDATE</span>()</div><div class="line">)</div><div class="line"><span class="keyword">GO</span></div><div class="line"><span class="comment">--主键就已经是聚集索引了,无需再指定</span></div><div class="line"><span class="comment">--CREATE CLUSTERED INDEX PK_Employee_EmployeeID_Demo_BTree ON Employee_Demo_BTree(EmployeeID ASC)</span></div><div class="line"><span class="comment">--添加非聚集索引</span></div><div class="line"><span class="keyword">CREATE</span> NONCLUSTERED <span class="keyword">INDEX</span> IX_Employee_ManagerID_Demo_BTree <span class="keyword">ON</span> Employee_Demo_BTree([ManagerID] <span class="keyword">ASC</span>)</div><div class="line"><span class="keyword">CREATE</span> NONCLUSTERED <span class="keyword">INDEX</span> IX_Employee_ModifiedDate_Demo_BTree <span class="keyword">ON</span> Employee_Demo_BTree( [ModifiedDate] <span class="keyword">ASC</span>)</div><div class="line"><span class="comment">--插入数据</span></div><div class="line"><span class="keyword">INSERT</span> [dbo].[Employee_Demo_BTree]</div><div class="line">  <span class="keyword">SELECT</span> [BusinessEntityID],</div><div class="line">    [NationalIDNumber],</div><div class="line">    [BusinessEntityID]+<span class="number">100</span>,</div><div class="line">    [LoginID],</div><div class="line">    [BusinessEntityID]%<span class="number">50</span>,</div><div class="line">    [JobTitle],</div><div class="line">    [BirthDate],</div><div class="line">    [MaritalStatus],</div><div class="line">    [Gender],</div><div class="line">    [HireDate],</div><div class="line">    [ModifiedDate]</div><div class="line">  <span class="keyword">FROM</span> [HumanResources].[Employee]</div><div class="line"><span class="keyword">GO</span></div><div class="line"><span class="comment">----------------------------------------------堆表非聚集索引表-------------------------------------------</span></div><div class="line"><span class="keyword">USE</span> [AdventureWorks]</div><div class="line"><span class="keyword">GO</span></div><div class="line"><span class="keyword">IF</span> <span class="keyword">EXISTS</span>(<span class="keyword">SELECT</span> TABLE_NAME <span class="keyword">FROM</span> INFORMATION_SCHEMA.TABLES <span class="keyword">WHERE</span> TABLE_NAME = <span class="string">'Employee_Demo_Heap'</span>)</div><div class="line">  <span class="keyword">DROP</span> <span class="keyword">TABLE</span> Employee_Demo_Heap</div><div class="line"><span class="keyword">GO</span></div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Employee_Demo_Heap(</div><div class="line">  EmployeeID <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  NationalIDNumber <span class="keyword">NVARCHAR</span>(<span class="number">15</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  ContactID <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  LoginID <span class="keyword">NVARCHAR</span>(<span class="number">256</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  ManagerID <span class="built_in">INT</span> <span class="literal">NULL</span>,</div><div class="line">  Title <span class="keyword">NVARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  BirthDate DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  MaritalStatus <span class="keyword">NCHAR</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  Gender <span class="keyword">NCHAR</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  HireDate DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  ModifiedDate DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">GETDATE</span>()</div><div class="line">)</div><div class="line"><span class="keyword">GO</span></div><div class="line"><span class="comment">--因为没有主键所以要指定非聚集索引</span></div><div class="line"><span class="keyword">CREATE</span> NONCLUSTERED <span class="keyword">INDEX</span> PK_Employee_EmployeeID_Demo_Heap <span class="keyword">ON</span> Employee_Demo_Heap( [EmployeeID] <span class="keyword">ASC</span>)</div><div class="line"><span class="comment">--添加非聚集索引</span></div><div class="line"><span class="keyword">CREATE</span> NONCLUSTERED <span class="keyword">INDEX</span> IX_Employee_ManagerID_Demo_Heap <span class="keyword">ON</span> Employee_Demo_BTree([ManagerID] <span class="keyword">ASC</span>)</div><div class="line"><span class="keyword">CREATE</span> NONCLUSTERED <span class="keyword">INDEX</span> IX_Employee_ModifiedDate_Demo_Heap <span class="keyword">ON</span> Employee_Demo_BTree( [ModifiedDate] <span class="keyword">ASC</span>)</div><div class="line"><span class="comment">--插入数据</span></div><div class="line"><span class="keyword">INSERT</span> [dbo].[Employee_Demo_Heap]</div><div class="line">  <span class="keyword">SELECT</span> [BusinessEntityID],</div><div class="line">    [NationalIDNumber],</div><div class="line">    [BusinessEntityID]+<span class="number">100</span>,</div><div class="line">    [LoginID],</div><div class="line">    [BusinessEntityID]%<span class="number">50</span>,</div><div class="line">    [JobTitle],</div><div class="line">    [BirthDate],</div><div class="line">    [MaritalStatus],</div><div class="line">    [Gender],</div><div class="line">    [HireDate],</div><div class="line">    [ModifiedDate]</div><div class="line">  <span class="keyword">FROM</span> [HumanResources].[Employee]</div><div class="line"><span class="keyword">GO</span></div></pre></td></tr></table></figure>
<h1 id="关于锁"><a href="#关于锁" class="headerlink" title="关于锁"></a>关于锁</h1><h1 id="锁资源和兼容性"><a href="#锁资源和兼容性" class="headerlink" title="锁资源和兼容性"></a>锁资源和兼容性</h1><h1 id="sqlserver事务隔离级别"><a href="#sqlserver事务隔离级别" class="headerlink" title="sqlserver事务隔离级别"></a>sqlserver事务隔离级别</h1><h1 id="事务隔离级别和锁释放"><a href="#事务隔离级别和锁释放" class="headerlink" title="事务隔离级别和锁释放"></a>事务隔离级别和锁释放</h1><h1 id="监视锁释放"><a href="#监视锁释放" class="headerlink" title="监视锁释放"></a>监视锁释放</h1><h1 id="实际查询中锁的申请与释放"><a href="#实际查询中锁的申请与释放" class="headerlink" title="实际查询中锁的申请与释放"></a>实际查询中锁的申请与释放</h1><h2 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h2><h2 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h2><h2 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h2><h2 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍SQL Server 的锁&lt;/p&gt;
    
    </summary>
    
      <category term="knowledge" scheme="http://baochen.name:4000/categories/knowledge/"/>
    
    
      <category term="mssql" scheme="http://baochen.name:4000/tags/mssql/"/>
    
      <category term="lock" scheme="http://baochen.name:4000/tags/lock/"/>
    
  </entry>
  
  <entry>
    <title>SQL Server基本管理单位:区(Extend)</title>
    <link href="http://baochen.name:4000/2017/03/21/sql-server-extend-management/"/>
    <id>http://baochen.name:4000/2017/03/21/sql-server-extend-management/</id>
    <published>2017-03-21T13:50:07.000Z</published>
    <updated>2017-03-21T14:41:17.562Z</updated>
    
    <content type="html"><![CDATA[<p>区就是一组8个页(8K),因此区是64k的块。SQL Server内部有2类区：</p>
<ul>
<li>混合区</li>
<li>统一区</li>
</ul>
<a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;区就是一组8个页(8K),因此区是64k的块。SQL Server内部有2类区：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;混合区&lt;/li&gt;
&lt;li&gt;统一区&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="knowledge" scheme="http://baochen.name:4000/categories/knowledge/"/>
    
    
      <category term="mssql" scheme="http://baochen.name:4000/tags/mssql/"/>
    
      <category term="performance tuning" scheme="http://baochen.name:4000/tags/performance-tuning/"/>
    
  </entry>
  
  <entry>
    <title>02.SQL Server存储单位:页(Page)</title>
    <link href="http://baochen.name:4000/2017/03/01/data-pages-the-foundation-of-sql-server/"/>
    <id>http://baochen.name:4000/2017/03/01/data-pages-the-foundation-of-sql-server/</id>
    <published>2017-03-01T13:53:53.000Z</published>
    <updated>2017-03-21T14:41:17.562Z</updated>
    
    <content type="html"><![CDATA[<p>SQL Server 基本存储单位是页，一个页大小为8K。<br>页分为不同的类型：</p>
<a id="more"></a>
<p>1 Data page 堆表和聚集索引的叶子节点数据<br>2 Index page    聚集索引的非叶子节点和非聚集索引的所有索引记录<br>3 Text mixed page    A text page that holds small chunks of LOB values plus internal parts of text tree. These can be shared between LOB values in the same partition of an index or heap.<br>4 Text tree page    A text page that holds large chunks of LOB values from a single column value.<br>7 Sort page    排序时所用到的临时页，排序中间操作存储数据用的。<br>8 GAM page 全局分配映射（Global Allocation Map，GAM）页面 这些页面记录了哪些区已经被分配并用作何种用途。<br>9 SGAM page    共享全局分配映射（Shared Global Allocation Map，GAM）页面 这些页面记录了哪些区当前被用作混合类型的区，并且这些区需含有至少一个未使用的页面。<br>10 IAM page  有关每个分配单元中表或索引所使用的区的信息<br>11 PFS page  有关页分配和页的可用空间的信息<br>13 boot page 记录了关于数据库的信息，仅存于每个数据库的第9页<br>15 file header page 记录了关于数据库文件的信息，存于每个数据库文件的第0页<br>16 DCM page    记录自从上次全备以来的数据改变的页面，以备差异备份<br>17 BCM page 有关每个分配单元中自最后一条 BACKUP LOG 语句之后的大容量操作所修改的区的信息</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">USE</span> [<span class="keyword">Test</span>]</div><div class="line"><span class="keyword">GO</span></div><div class="line"><span class="keyword">if</span> <span class="keyword">exists</span> (<span class="keyword">select</span> * <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">id</span> =  object_id(N<span class="string">'[dbo].[Customers]'</span>) <span class="keyword">and</span> OBJECTPROPERTY(<span class="keyword">id</span>, N<span class="string">'IsUserTable'</span>) = <span class="number">1</span> )</div><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> dbo.Customers</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Customers</div><div class="line">(</div><div class="line">   FirstName <span class="built_in">CHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">   LastName <span class="built_in">CHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">   Address <span class="built_in">CHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">   ZipCode <span class="built_in">CHAR</span>(<span class="number">5</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">   Rating <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">   ModifiedDate DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">)</div><div class="line"><span class="keyword">GO</span></div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dbo.Customers</div><div class="line">        ( FirstName ,</div><div class="line">          LastName ,</div><div class="line">          Address ,</div><div class="line">          ZipCode ,</div><div class="line">          Rating ,</div><div class="line">          ModifiedDate</div><div class="line">        )</div><div class="line"><span class="keyword">VALUES</span>  ( <span class="string">'Philip'</span> , </div><div class="line">          <span class="string">'Aschenbrenner'</span> ,</div><div class="line">          <span class="string">'Pichlagasse 16/6'</span> , </div><div class="line">          <span class="string">'1220'</span> , </div><div class="line">          <span class="number">1</span> ,</div><div class="line">          <span class="string">'2015-03-25 02:22:51'</span> </div><div class="line">        )</div><div class="line"><span class="keyword">GO</span></div></pre></td></tr></table></figure>  
<p>DBCC IND 命令用于查询一个存储对象的内部存储结构信息，该命令有4个参数, 前3个参数必须指定。语法如下：<br>DBCC IND ( { ‘dbname’ | dbid }, { ‘objname’ | objid },{ nonclustered indid | 1 | 0 | -1 | -2 } [, partition_number] )<br>第一个参数是数据库名或数据库ID。<br>第二个参数是数据库中的对象名或对象ID，对象可以是表或者索引视图。<br>第三个参数是一个非聚集索引ID或者 1, 0, 1, or 2. 值的含义：<br> 0: 只显示对象的in-row data页和 in-row IAM 页。<br> 1: 显示对象的全部页, 包含IAM 页, in-row数据页, LOB 数据页row-overflow 数据页 . 如果请求的对象含有聚集所以则索引页也包括。<br> -1: 显示全部IAM页,数据页, 索引页 也包括 LOB 和row-overflow 数据页。<br> -2: 显示全部IAM页。<br> Nonclustered index ID:显示索引的全部 IAM页, data页和索引页，包含LOB和 row-overflow数据页。<br>为了兼容sql server 2000,第四个参数是可选的,该参数用于指定一个分区号.如果不给定值或者给定0, 则显示全部分区数据。<br>和DBCC PAGE不同的是, SQL Server运行DBCC IND不需要开启3604跟踪标志.<br>结果中 Page type: 1 = data page, 2 = index page, 3 = LOB_MIXED_PAGE, 4 = LOB_TREE_PAGE, 10 = IAM page   </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DBCC IND('InternalStorageFormat','Customers',-1)</div></pre></td></tr></table></figure>
<p>结果如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">PageFID</th>
<th style="text-align:center">PagePID</th>
<th style="text-align:center">IAMFID</th>
<th style="text-align:center">IAMPID</th>
<th style="text-align:center">ObjectID</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">150</td>
<td style="text-align:center">NULL</td>
<td style="text-align:center">NULL</td>
<td style="text-align:center">261575970</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">147</td>
<td style="text-align:center">1</td>
<td style="text-align:center">150</td>
<td style="text-align:center">261575970</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">IndexID</th>
<th style="text-align:center">PartitionNumber</th>
<th style="text-align:center">PartitionID</th>
<th style="text-align:center">iam_chain_type</th>
<th style="text-align:center">PageType</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">72057594040614912</td>
<td style="text-align:center">In-row data</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">72057594040614912</td>
<td style="text-align:center">In-row data</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">IndexLevel</th>
<th style="text-align:center">NextPageFID</th>
<th style="text-align:center">NextPagePID</th>
<th style="text-align:center">PrevPageFID</th>
<th style="text-align:center">PrevPagePID</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">NULL</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
<p>DBCC Page 命令读取数据页结构的命令DBCC Page。<br>该命令为非文档化的命令，具体如下：<br>　　DBCC Page ({dbid|dbname},filenum,pagenum[,printopt])<br>　　具体参数描述如下：<br>　　dbid 包含页面的数据库ID<br>　　dbname 包含页面的数据库的名称<br>　　filenum 包含页面的文件编号<br>　　pagenum 文件内的页面<br>　　printopt 可选的输出选项;选用其中一个值：<br>　　0:默认值，输出缓冲区的标题和页面标题<br>　　1:输出缓冲区的标题、页面标题(分别输出每一行)，以及行偏移量表<br>　　2:输出缓冲区的标题、页面标题(整体输出页面)，以及行偏移量表<br>　　3:输出缓冲区的标题、页面标题(分别输出每一行)，以及行偏移量表;每一行后跟分别列出的它的列值<br>　　要想看到这些输出的结果，还需要设置DBCC TRACEON(3604)。<br>可以使用 WITH TABLERESULTS 显示成表格化的数据形式</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">DBCC TRACEON(3604)</div><div class="line">DBCC PAGE(InternalStorageFormat,1,41,1) </div><div class="line">GO    </div></pre></td></tr></table></figure>
<p>结果如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">DBCC 执行完毕。如果 DBCC 输出了错误信息，请与系统管理员联系。</div><div class="line">PAGE: (1:147)</div><div class="line"></div><div class="line">BUFFER:</div><div class="line">BUF @0x00000001FEEBDEC0</div><div class="line">bpage = 0x0000000184E2E000          bhash = 0x0000000000000000          bpageno = (1:147)</div><div class="line">bdbid = 16                          breferences = 0                     bcputicks = 0</div><div class="line">bsampleCount = 0                    bUse1 = 36342                       bstat = 0xb</div><div class="line">blog = 0x215acccc                   bnext = 0x0000000000000000     </div><div class="line"></div><div class="line">PAGE HEADER:</div><div class="line">Page @0x0000000184E2E000</div><div class="line">m_pageId = (1:147)                  m_headerVersion = 1                 m_type = 1</div><div class="line">m_typeFlagBits = 0x0                m_level = 0                         m_flagBits = 0x8000</div><div class="line">m_objId (AllocUnitId.idObj) = 121   m_indexId (AllocUnitId.idInd) = 256 </div><div class="line">Metadata: AllocUnitId = 72057594045857792                                </div><div class="line">Metadata: PartitionId = 72057594040614912                                Metadata: IndexId = 0</div><div class="line">Metadata: ObjectId = 261575970      m_prevPage = (0:0)                  m_nextPage = (0:0)</div><div class="line">pminlen = 221                       m_slotCnt = 1                       m_freeCnt = 7870</div><div class="line">m_freeData = 320                    m_reservedCnt = 0                   m_lsn = (34:364:23)</div><div class="line">m_xactReserved = 0                  m_xdesId = (0:0)                    m_ghostRecCnt = 0</div><div class="line">m_tornBits = 0                      DB Frag ID = 1                      </div><div class="line"></div><div class="line">Allocation Status</div><div class="line">GAM (1:2) = ALLOCATED               SGAM (1:3) = ALLOCATED              </div><div class="line">PFS (1:1) = 0x61 MIXED_EXT ALLOCATED  50_PCT_FULL                        DIFF (1:6) = CHANGED</div><div class="line">ML (1:7) = NOT MIN_LOGGED           </div><div class="line"></div><div class="line">Slot 0 Offset 0x60 Length 224</div><div class="line">Record Type = PRIMARY_RECORD        Record Attributes =  NULL_BITMAP    Record Size = 224</div><div class="line">Memory Dump @0x0000000011C7A060</div><div class="line">0000000000000000:   1000dd00 576f6f64 79202020 20202020 20202020  ....Woody           </div><div class="line">0000000000000014:   20202020 20202020 20202020 20202020 20202020                      </div><div class="line">0000000000000028:   20202020 20202020 20202020 20205475 20202020                Tu    </div><div class="line">000000000000003C:   20202020 20202020 20202020 20202020 20202020                      </div><div class="line">0000000000000050:   20202020 20202020 20202020 20202020 20202020                      </div><div class="line">0000000000000064:   20202020 5a554f51 49414f20 594f5558 4920544f      ZUOQIAO YOUXI TO</div><div class="line">0000000000000078:   574e204c 494e4841 49204349 54592020 20202020  WN LINHAI CITY      </div><div class="line">000000000000008C:   20202020 20202020 20202020 20202020 20202020                      </div><div class="line">00000000000000A0:   20202020 20202020 20202020 20202020 20202020                      </div><div class="line">00000000000000B4:   20202020 20202020 20202020 20202020 20202020                      </div><div class="line">00000000000000C8:   20202020 30303030 20010000 001480a7 0091a400      0000 ...........</div><div class="line">00000000000000DC:   00060000                                      ....   </div><div class="line">Slot 0 Column 1 Offset 0x4 Length 50 Length (physical) 50</div><div class="line">FirstName = Woody</div><div class="line">Slot 0 Column 2 Offset 0x36 Length 50 Length (physical) 50</div><div class="line">LastName = Tu </div><div class="line">Slot 0 Column 3 Offset 0x68 Length 100 Length (physical) 100</div><div class="line">Address = ZUOQIAO YOUXI TOWN LINHAI CITY  </div><div class="line">Slot 0 Column 4 Offset 0xcc Length 5 Length (physical) 5</div><div class="line">ZipCode = 0000 </div><div class="line">Slot 0 Column 5 Offset 0xd1 Length 4 Length (physical) 4</div><div class="line">Rating = 1   </div><div class="line">Slot 0 Column 6 Offset 0xd5 Length 8 Length (physical) 8</div><div class="line">ModifiedDate = 2015-05-07 10:09:51.000  </div><div class="line"></div><div class="line">OFFSET TABLE:</div><div class="line">Row - Offset                        </div><div class="line">0 (0x0) - 96 (0x60)  </div><div class="line"></div><div class="line">DBCC 执行完毕。如果 DBCC 输出了错误信息，请与系统管理员联系。</div><div class="line"></div></pre></td></tr></table></figure></p>
<p>Page @0x08F84000            同BUFFER中的bpage地址<br>m_pageId = (1:79)              数据页号<br>m_headerVersion = 1         头文件版本号，一直为1<br>m_type = 1                          页面类型，1为数据页面<br>m_typeFlagBits = 0x4         数据页和索引页为4，其他页为0<br>m_level = 0                         该页在索引页（B树）中的级数<br>m_flagBits = 0x8000          页面标志<br>m_objId (AllocUnitId.idObj) = 46                       同Metadata: ObjectId<br>m_indexId (AllocUnitId.idInd) = 256                  同Metadata: IndexId<br>Metadata: AllocUnitId = 72057594040942592  存储单元的ID,sys.allocation_units.allocation_unit_id<br>Metadata: PartitionId = 72057594039304192   数据页所在的分区号，sys.partitions.partition_id<br>Metadata: IndexId = 0                                        页面的索引号，sys.objects.object_id&amp;sys.indexes.index_id<br>Metadata: ObjectId = 277576027                      该页面所属的对象的id，sys.objects.object_id<br>m_prevPage = (0:0)                  该数据页的前一页面；主要用在数据页、索引页和IAM页<br>m_nextPage = (0:0)                  该数据页的后一页面；主要用在数据页、索引页和IAM页<br>pminlen = 221                          定长数据所占的字节数<br>m_slotCnt = 2                           页面中的数据的行数<br>m_freeCnt = 7644                    页面中剩余的空间<br>m_freeData = 544                    从第一个字节到最后一个字节的空间字节数<br>m_reservedCnt = 0                   活动事务释放的字节数<br>m_lsn = (255:8406:2)                日志记录号<br>m_xactReserved = 0                 最新加入到m_reservedCnt领域的字节数<br>m_xdesId = (0:0)                       添加到m_reservedCnt的最近的事务id<br>m_ghostRecCnt = 0                 幻影数据的行数<br>m_tornBits = 0                         页的校验位或者被由数据库页面保护形式决定分页保护位取代</p>
<p>GAM (1:2) = ALLOCATED                                                   在GAM页上的分配情况<br>SGAM (1:3) = ALLOCATED                                                 在SGAM页上的分配情况<br>PFS (1:1) = 0x61 MIXED_EXT ALLOCATED  50_PCT_FULL 在PFS页上的分配情况，该页为50%满，<br>DIFF (1:6) = CHANGED<br>ML (1:7) = NOT MIN_LOGGED   </p>
<p>查看空间占用情况<br>free_space_in_bytes 表示在指定页面当前有多少空间是可用的。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> sys.dm_os_buffer_descriptors</div></pre></td></tr></table></figure>
<p>下面这个查询可以告诉你在你的数据库实例里每个数据有多少空间被浪费，可以找出哪个数据库有糟糕的表设计。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">DB_NAME(database_id),</div><div class="line"><span class="keyword">SUM</span>(free_space_in_bytes) / <span class="number">1024</span> <span class="keyword">AS</span> <span class="string">'Free_KB'</span></div><div class="line"><span class="keyword">FROM</span> sys.dm_os_buffer_descriptors</div><div class="line"><span class="keyword">WHERE</span> database_id &lt;&gt; <span class="number">32767</span></div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> database_id</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">SUM</span>(free_space_in_bytes) <span class="keyword">DESC</span></div><div class="line"><span class="keyword">GO</span></div></pre></td></tr></table></figure></p>
<img src="/2017/03/01/data-pages-the-foundation-of-sql-server/112056586572951.png" alt="SQL文件结构" title="SQL文件结构">
<p>第1个页，页号0，是文件头（page type 15）。它保存着文件头信息。每个数据文件只有一个文件头页，而且是第0页的位置。文件头页里保存着数据文件信息，例如文件大小，最小大小，最大大小和文件增长方式等。</p>
<p>第2个页，页号1，是第一个PFS页（page type 11）。PFS页在数据文件里是第2个页（页号1），紧跟在文件头后（页号0）。GAM和SGAM用来跟踪区分配状态，PFS页用来跟踪页分配级别。当分配页面的时候，数据库引擎使用GAM和SGAM来识别有空页的区。一旦数据库引擎找到有空页的区，它使用PFS页来识别区里空页的可用空间量。可用空间只在保存LOB值（ie text/image, varchar(max),nvarchar(max),varbinary(max) ,row overflow data）或堆表页时跟踪。默认情况下，LOB数据保存在一个独立的页，在原页保存一个指向独立页的指针。这些就是数据能够保存的空页。对于索引页，因为数据的保存顺序和索引顺序是一致的，因此没有必用使用到PFS页。PFS页每8088个页重复一个。这就是说第1页，第8088页，第16176页，第24264页……在每个数据文件里都是PFS页。SQL Server： 理解PFS页。</p>
<p>第3个页，页号2，是第一个GAM页（page type 8）。GAM页用来跟踪哪些区被使用。每个区对应GAM页的一个位。如果这个位的值是1，对应区是空、可用的，如果这个位的值是0，对应区是作为统一区或混合区使用。一个GAM页可以保存接近64000个区的信息。那就是说，一个GAM页可以保存（64000 <em> 8 </em> 8）/1024 = 4000 MB的信息。简而言之，一个7GB大小的数据文件将有2个GAM页。SQL Server ： 理解GAM与SGAM页。</p>
<p>第4个页，页号3，是第一个SGAM页（page type 9）。SGAM页用来跟踪哪些区正作为混合区使用且至少有一个可用页。每个区对应一个GAM页的有一个位。如果这个位的值是1，对应区作为混合区使用且至少有个可用页，如果这个位值是0，对应区没作为混合区使用或所有页作为混合区使用了。一个SGAM页可以保存接近64000个区的信息。那就是说，一个SGAM页可以保存64000 <em> 8 </em> 8  /1024 =4000MB。简而言之，一个7GB大小的数据文件将有2个SGAM页。SQL Server ： 理解GAM与SGAM页。</p>
<p>第5个、6个页，（页号4,5），在SQL Server架构里当前没有被使用。页类型是0。如果用DBCC PAGE命令查看这些页只会输出页头信息，并以非法页类型结束。</p>
<p>第7个页，页号6，是第一个DCM页（page type 16）。SQL Server使用DCM页来跟踪自上次完整备份后，修改过的区信息。每个区对应DCM页里的一个位。如果这个位的值1，对应区自上一次完整备份后，已被修改。如果这个位值是0，对应区自上一次完整备份后，未作修改。一个DCM页可以保存接近64000个区的信息。每511232个页，DCM页会重复一个。一个DCM页可以跟踪63904个区信息。第2个DCM页出现在第511238页。SQL Server： 理解DCM页。</p>
<p>第8个页，页号7，是第一个BCM页（page type 17）。SQL Server使用BCM页来跟踪自上次日志备份后，通过大容量日志操作被修改的区信息。每个区对应BCM页里一个位。如果这个位的值是1，对应区自上一次日志备份后，因大容量日志操作后，这个区被修改。如果这个位的值是0，对应区自上一次日志备份后，因大容量日志操作后，这个区未被修改。一个BCM页可以保存近64000个区的信息。每511232个页，BCM页会重复一个。一个BCM页可以跟踪63904个区信息。第2个BCM页出现在第511239页。SQL Server ：理解BCM页。</p>
<p>第9个页，页号8，是第一个IAM页（page type 10）。IAM页是用来跟踪，指定表的分配单元的对应页或区在GAM内的分区里的分配情况。SQL Server ：理解IAM页。</p>
<p>第10个页，页号9，是启动页（page type 13）。启动页只出现在主数据文件（prmary data file）里的第9页，启动页不会出现在第2个数据文件里。我们可以使用DBCC PAGE命令查看它的页信息，在这个页里保存的页信息值是自说明的。如果这个页因某些原因损坏的话，我们将不能使用命令DBCC CheckDb来修复。页还原也不能改变这个情况。只能从上一次好的数据库备份中恢复才可以修复这个问题。</p>
<p>从第11页开始，你可以看到各种不同的页混合在一起，像数据页，索引页，IAM页，行溢出页和LOB页等等。数据页的页类型是1，索引页的页类型是2，行溢出（Row-overflow）页和LOB页的页类型是3。数据页和索引页是以同样结构保存的。SQL Server：理解数据页结构。</p>
<p>行溢出（Row-overflow）页用来存储不能在一页里保存的数据。LOB页用来保存大型对象，并不作为行数据的一部分来保存。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SQL Server 基本存储单位是页，一个页大小为8K。&lt;br&gt;页分为不同的类型：&lt;/p&gt;
    
    </summary>
    
      <category term="knowledge" scheme="http://baochen.name:4000/categories/knowledge/"/>
    
    
      <category term="mssql" scheme="http://baochen.name:4000/tags/mssql/"/>
    
      <category term="performance tuning" scheme="http://baochen.name:4000/tags/performance-tuning/"/>
    
  </entry>
  
  <entry>
    <title>01.SQL SERVER如何执行一个查询</title>
    <link href="http://baochen.name:4000/2017/03/01/how-sql-server-executes-a-query/"/>
    <id>http://baochen.name:4000/2017/03/01/how-sql-server-executes-a-query/</id>
    <published>2017-03-01T12:35:53.000Z</published>
    <updated>2017-03-01T14:30:12.452Z</updated>
    
    <content type="html"><![CDATA[<p>根据SQLpassion推送的 SQLpassion Performance Tuning Training Plan - Week 1: How SQL Server executes a Query。记录一下对查询执行的了解。<br><a id="more"></a></p>
<h1 id="提交查询"><a href="#提交查询" class="headerlink" title="提交查询"></a>提交查询</h1><p>客户端提交给数据库的查询通过SQL Server网络接口等协议层(Protocol Layer)传给命令解析器。</p>
<h1 id="命令解析器-Command-Parser-处理"><a href="#命令解析器-Command-Parser-处理" class="headerlink" title="命令解析器(Command Parser)处理"></a>命令解析器(Command Parser)处理</h1><p>命令解释器接收到查询会做以下工作：</p>
<ul>
<li>检查<ul>
<li>语法正确</li>
<li>数据库表存在</li>
<li>查询列存在</li>
</ul>
</li>
<li>生成查询树(Query Tree)：重现查询</li>
<li>查询树提交给查询优化器</li>
</ul>
<h1 id="查询优化器-Query-Optimizer-处理"><a href="#查询优化器-Query-Optimizer-处理" class="headerlink" title="查询优化器(Query Optimizer)处理"></a>查询优化器(Query Optimizer)处理</h1><ul>
<li>查询优化器将查询树编译为查询计划(Execution Plan)</li>
<li>将查询计划缓存到缓冲池(Buffer Pool)中的执行计划缓存区(Plan Cache)</li>
<li>将查询计划提交给查询执行器</li>
</ul>
<h1 id="查询执行器-Query-Executor-处理"><a href="#查询执行器-Query-Executor-处理" class="headerlink" title="查询执行器(Query Executor)处理"></a>查询执行器(Query Executor)处理</h1><ul>
<li>查询分析器根据查询计划向存取方法(Access Methods)拿指定的读取页,存取方法会向缓冲区管理器读取想要指定页。</li>
<li>缓存区管理器(Buffer Manager)检查它是否已在数据缓存(data cache)，如果没找到的话就从磁盘加载到缓存。<ul>
<li>当请求的页面已经被存在缓冲池时,页会被立即读取,称为逻辑读。</li>
<li>如果请求的页没存在缓冲池,缓冲区管理器会发起异步I/O操作把请求的页存储子系统中读到缓冲池,称为物理读。<h1 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h1></li>
</ul>
</li>
</ul>
<p>当修改数据(INSERT,DELETE,UPDATE)时，需要与事务管理器进行交互，事务管理器把执行事务中描述的改变通过事务日志写到事务文件。</p>
<img src="/2017/03/01/how-sql-server-executes-a-query/mssqlarch.png" alt="sql server 核心架构图" title="sql server 核心架构图">
<h1 id="数据缓存-Data-Cache"><a href="#数据缓存-Data-Cache" class="headerlink" title="数据缓存(Data Cache)"></a>数据缓存(Data Cache)</h1><p>查看每个数据库占用了多大数据缓存(sys.dm_os_buffer_descriptors)</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">count</span>(*)*<span class="number">8</span>/<span class="number">1024</span> <span class="keyword">AS</span> <span class="string">'Cached Size (MB)'</span></div><div class="line">	,<span class="keyword">CASE</span> database_id</div><div class="line">		<span class="keyword">WHEN</span> <span class="number">32767</span> <span class="keyword">THEN</span> <span class="string">'ResourceDb'</span></div><div class="line">		<span class="keyword">ELSE</span> db_name(database_id)</div><div class="line">		<span class="keyword">END</span> <span class="keyword">AS</span> <span class="string">'Database'</span></div><div class="line"><span class="keyword">FROM</span> sys.dm_os_buffer_descriptors</div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> db_name(database_id),database_id</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="string">'Cached Size (MB)'</span> <span class="keyword">DESC</span></div></pre></td></tr></table></figure>
<h1 id="干净页和脏页"><a href="#干净页和脏页" class="headerlink" title="干净页和脏页"></a>干净页和脏页</h1><p>清除干净页</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DBCC DROPCLEANBUFFERS</div></pre></td></tr></table></figure>
<p>查询脏页</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> db_name(database_id) <span class="keyword">AS</span> <span class="string">'Database'</span>,<span class="keyword">count</span>(page_id) <span class="keyword">AS</span> <span class="string">'Dirty Pages'</span></div><div class="line"><span class="keyword">FROM</span> sys.dm_os_buffer_descriptors</div><div class="line"><span class="keyword">WHERE</span> is_modified =<span class="number">1</span></div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> db_name(database_id)</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">count</span>(page_id) <span class="keyword">DESC</span></div></pre></td></tr></table></figure>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="http://rusanu.com/2013/08/01/understanding-how-sql-server-executes-a-query" target="_blank" rel="external">understanding-how-sql-server-executes-a-query</a><br><a href="http://www.cnblogs.com/woodytu/p/4465649.html" target="_blank" rel="external">第1/24周 SQL Server 如何执行一个查询</a><br><a href="http://www.cnblogs.com/woodytu/p/4471386.html" target="_blank" rel="external">SQL Server 2012：SQL Server体系结构——一个查询的生命周期(1)</a><br><a href="http://www.cnblogs.com/woodytu/p/4472315.html" target="_blank" rel="external">SQL Server 2012：SQL Server体系结构——一个查询的生命周期(2)</a><br><a href="http://www.cnblogs.com/woodytu/p/4474652.html" target="_blank" rel="external">SQL Server 2012：SQL Server体系结构——一个查询的生命周期(3)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;根据SQLpassion推送的 SQLpassion Performance Tuning Training Plan - Week 1: How SQL Server executes a Query。记录一下对查询执行的了解。&lt;br&gt;
    
    </summary>
    
      <category term="knowledge" scheme="http://baochen.name:4000/categories/knowledge/"/>
    
    
      <category term="mssql" scheme="http://baochen.name:4000/tags/mssql/"/>
    
      <category term="performance tuning" scheme="http://baochen.name:4000/tags/performance-tuning/"/>
    
  </entry>
  
  <entry>
    <title>关于备案后续</title>
    <link href="http://baochen.name:4000/2017/03/01/about-beian-2/"/>
    <id>http://baochen.name:4000/2017/03/01/about-beian-2/</id>
    <published>2017-03-01T04:43:22.000Z</published>
    <updated>2017-03-01T05:02:38.695Z</updated>
    
    <content type="html"><![CDATA[<p>通过腾讯云备案，腾讯初审大约用了2天（包括提交资料和照片），然后昨天（2017年2月28日 中午12:43）腾讯正式把备案材料提交给管局审核，今天（2017年3月1日 上午10:43）就收到了审核通过的邮件和短信。<br>真可谓快。出乎了我的想象。<br>因为是个人备案，步骤很简单，一部手机+身份证就可以了。<br>据说需要居住证的，也能没有要求提交，可能是放宽了政策吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过腾讯云备案，腾讯初审大约用了2天（包括提交资料和照片），然后昨天（2017年2月28日 中午12:43）腾讯正式把备案材料提交给管局审核，今天（2017年3月1日 上午10:43）就收到了审核通过的邮件和短信。&lt;br&gt;真可谓快。出乎了我的想象。&lt;br&gt;因为是个人备案，步
    
    </summary>
    
      <category term="knowledge" scheme="http://baochen.name:4000/categories/knowledge/"/>
    
    
      <category term="beian" scheme="http://baochen.name:4000/tags/beian/"/>
    
  </entry>
  
  <entry>
    <title>关于备案</title>
    <link href="http://baochen.name:4000/2017/02/24/about-Beian/"/>
    <id>http://baochen.name:4000/2017/02/24/about-Beian/</id>
    <published>2017-02-24T15:12:14.000Z</published>
    <updated>2017-02-24T15:22:37.778Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>为了规范互联网信息服务活动，促进互联网信息服务健康有序发展，根据国务院令第292号《互联网信息服务管理办法》和工信部令第33号《非经营性互联网信息服务备案管理办法》规定，国家对经营性互联网信息服务实行许可制度，对非经营性互联网信息服务实行备案制度。未取得许可或者未履行备案手续的，不得从事互联网信息服务，否则就属于违法行为。</p>
</blockquote>
<a id="more"></a>
<p>因此按照规定，需要对自己的网站进行备案。以防后面无法使用的情况发生。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;为了规范互联网信息服务活动，促进互联网信息服务健康有序发展，根据国务院令第292号《互联网信息服务管理办法》和工信部令第33号《非经营性互联网信息服务备案管理办法》规定，国家对经营性互联网信息服务实行许可制度，对非经营性互联网信息服务实行备案制度。未取得许可或者未履行备案手续的，不得从事互联网信息服务，否则就属于违法行为。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="knowledge" scheme="http://baochen.name:4000/categories/knowledge/"/>
    
    
      <category term="beian" scheme="http://baochen.name:4000/tags/beian/"/>
    
  </entry>
  
  <entry>
    <title>使用Nginx运行网站</title>
    <link href="http://baochen.name:4000/2017/02/24/server-with-nginx/"/>
    <id>http://baochen.name:4000/2017/02/24/server-with-nginx/</id>
    <published>2017-02-24T15:10:17.000Z</published>
    <updated>2017-02-24T15:22:37.782Z</updated>
    
    <content type="html"><![CDATA[<p>hexo server 不太好用，决定使用nginx。</p>
<a id="more"></a>
<p>首先在服务器上安装nginx，以ubuntu为例。使用apt-get安装比较方便，节省很多配置。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get nginx</div></pre></td></tr></table></figure>
<p>然后开始配置nginx：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd /etc/nginx</div><div class="line">sudp cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak</div><div class="line">sudo vi /etc/nginx/nginx.conf</div></pre></td></tr></table></figure>
<p>配置内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div></pre></td><td class="code"><pre><div class="line">user www-data;</div><div class="line"></div><div class="line">worker_processes auto;</div><div class="line"></div><div class="line">pid /run/nginx.pid;</div><div class="line"></div><div class="line"></div><div class="line">events &#123;</div><div class="line">        worker_connections 768;</div><div class="line">        # multi_accept on;</div><div class="line">&#125;</div><div class="line"></div><div class="line">http &#123;</div><div class="line"></div><div class="line">        ##</div><div class="line">        # Basic Settings</div><div class="line">        ##</div><div class="line"></div><div class="line">        sendfile on;</div><div class="line">        tcp_nopush on;</div><div class="line">        tcp_nodelay on;</div><div class="line">        keepalive_timeout 65;</div><div class="line">        types_hash_max_size 2048;</div><div class="line">        # server_tokens off;</div><div class="line"></div><div class="line">        # server_names_hash_bucket_size 64;</div><div class="line">        # server_name_in_redirect off;</div><div class="line"></div><div class="line">        include /etc/nginx/mime.types;</div><div class="line">        default_type application/octet-stream;</div><div class="line"></div><div class="line">        ##</div><div class="line">        # SSL Settings</div><div class="line">        ##</div><div class="line"></div><div class="line">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE</div><div class="line">        ssl_prefer_server_ciphers on;</div><div class="line"></div><div class="line">        ##</div><div class="line">        # Logging Settings</div><div class="line">        ##</div><div class="line"></div><div class="line">        # log_format main &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos; &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos; &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</div><div class="line"></div><div class="line">        error_log /var/log/nginx/error.log;</div><div class="line"></div><div class="line">        ##</div><div class="line">        # Gzip Settings</div><div class="line">        ##</div><div class="line"></div><div class="line">        gzip on;</div><div class="line">        gzip_disable &quot;msie6&quot;;</div><div class="line">        gzip_min_length 1k;</div><div class="line">        gzip_vary on;</div><div class="line">        gzip_proxied any;</div><div class="line">        gzip_comp_level 6;</div><div class="line">        gzip_buffers 16 8k;</div><div class="line">        gzip_http_version 1.1;</div><div class="line">        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;</div><div class="line"></div><div class="line">        ##</div><div class="line">        # Http Proxy Settings</div><div class="line">        ##</div><div class="line">        client_max_body_size   10m;</div><div class="line">        client_body_buffer_size   128k;</div><div class="line">        proxy_connect_timeout   75;</div><div class="line">        proxy_send_timeout   75;</div><div class="line">        proxy_read_timeout   75;</div><div class="line">        proxy_buffer_size   4k;</div><div class="line">        proxy_buffers   4 32k;</div><div class="line">        proxy_busy_buffers_size   64k;</div><div class="line">        proxy_temp_file_write_size  64k;</div><div class="line">        proxy_temp_path   /tmp/proxy_temp 1 2;</div><div class="line"></div><div class="line">        ##</div><div class="line">        # Upstream Settings</div><div class="line">        ##</div><div class="line"></div><div class="line">        upstream  backend  &#123; </div><div class="line">              ip_hash; </div><div class="line">              server   127.0.0.1:4000 max_fails=2 fail_timeout=30s ;  </div><div class="line">              # server   192.168.10.101:8080 max_fails=2 fail_timeout=30s ;  </div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        ##</div><div class="line">        # Server Settings</div><div class="line">        ##</div><div class="line"></div><div class="line">        ## Server baochen.name</div><div class="line"></div><div class="line">        server &#123;</div><div class="line"></div><div class="line">                listen       80;</div><div class="line">                server_name  baochen.name;</div><div class="line">                charset utf-8;</div><div class="line">        </div><div class="line">                access_log      /var/log/nginx/baochen.name.access.log;</div><div class="line">                error_log       /var/log/nginx/baochen.name.error.log;</div><div class="line">        </div><div class="line">                location / &#123;</div><div class="line">                        # proxy_pass        http://backend;  </div><div class="line">                        # proxy_redirect off;</div><div class="line">                        # proxy_set_header  Host  $host;</div><div class="line">                        # proxy_set_header  X-Real-IP  $remote_addr;  </div><div class="line">                        # proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;</div><div class="line">                        # proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;</div><div class="line">                        root /var/www/hexoblog;</div><div class="line">                        index  index.html;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                location /nginx_status &#123;</div><div class="line">                        stub_status on;</div><div class="line">                        access_log /var/log/nginx/ngs.access.log;</div><div class="line">                        # allow 192.168.10.0/24;</div><div class="line">                        # deny all;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                location ~ ^/(WEB-INF)/ &#123;   </div><div class="line">                        deny all;   </div><div class="line">                &#125;</div><div class="line"></div><div class="line">                # error_page  404              /404.html;</div><div class="line">                # redirect server error pages to the static page /50x.html</div><div class="line">                #</div><div class="line"></div><div class="line">                error_page   500 502 503 504  /50x.html;</div><div class="line"></div><div class="line">                location = /50x.html &#123;</div><div class="line">                        root   html;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">    &#125; </div><div class="line"></div><div class="line">        ##</div><div class="line">        # Virtual Host Configs</div><div class="line">        ##</div><div class="line"></div><div class="line">        include /etc/nginx/conf.d/*.conf;</div><div class="line">        include /etc/nginx/sites-enabled/*;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>编辑完成后 esc -&gt; !wq 退出。</p>
<p>编写crontab脚本:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">#this srcipt call by cron </div><div class="line">#will not exoprt some env var in profile or .profile</div><div class="line"></div><div class="line">rm -fr ~/update.log</div><div class="line"></div><div class="line">#execute profile</div><div class="line">. /etc/profile</div><div class="line">. ~/.profile</div><div class="line"></div><div class="line">#auto pull source code , generate and deploy to git</div><div class="line">. ~/HexoBlog/AutoUpdate.sh &gt;&gt; ~/update.log # 根据实际位置填写</div><div class="line"></div><div class="line">#deploy</div><div class="line">sudo cp -r ~/HexoBlog/public/* /var/www/hexoblog # 注意权限</div></pre></td></tr></table></figure>
<p>其中  脚本 AutoUpdate.sh 是自己随着库进行同步的 ，内容如下(之所以两个脚本原因看<a href="/2017/02/24/about-crontab/" title="这里">这里</a>)。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"># 如果使用cron 定时call 更新脚本 </div><div class="line"># 会出现 一些定义在profile 中的环境变量无法引入的情况</div><div class="line"># 可以单独建立一个壳脚本 添加一些必要的变量 再呼叫当前脚本 AutoUpdate.sh</div><div class="line">#. /etc/profile</div><div class="line">#. ~/.profile</div><div class="line">#. ~/&lt;somepath&gt;/AutoUpdate.sh # call this srcipt</div><div class="line">DEFAULT_DIR=$HOME/HexoBlog</div><div class="line">echo &quot;========================================&quot; </div><div class="line">echo $(date +%y_%m_%d_%H_%I_%T) </div><div class="line">echo &quot;----------------------------------------&quot; </div><div class="line">echo &quot;HOME : $HOME&quot;</div><div class="line">echo &quot;PATH : $PATH&quot;</div><div class="line">echo &quot;NODE_HOME : $NODE_HOME&quot;</div><div class="line">echo `whereis hexo`</div><div class="line">echo &quot;----------------------------------------&quot; </div><div class="line">if [ $1 ] ; then        </div><div class="line">    echo &quot;first argument is not empty : $1&quot; </div><div class="line">    TAR_DIR=$1 </div><div class="line">    echo &quot;use first argument as target dir : $TAR_DIR&quot; </div><div class="line">else</div><div class="line">    echo &quot;first argument is empty&quot;   </div><div class="line">    # use $DEFAULT_DIR as the target dir    </div><div class="line">    TAR_DIR=$DEFAULT_DIR</div><div class="line">    echo &quot;use default dir as target dir : $TAR_DIR&quot; </div><div class="line">fi </div><div class="line">echo &quot;----------------------------------------&quot; </div><div class="line">if [ -d $TAR_DIR ] ; then </div><div class="line">    echo &quot;$TAR_DIR is a dir,try update&quot; </div><div class="line">    cd $TAR_DIR</div><div class="line">    echo &quot;++++++++++++++begin git pull++++++++++++&quot; </div><div class="line">    git pull </div><div class="line">    echo &quot;++++++++++++++begin  hexo clean+++++++++&quot;</div><div class="line">    hexo clean </div><div class="line">    echo &quot;++++++++++++++begin  hexo generate+++++++&quot;</div><div class="line">    hexo g </div><div class="line">    echo &quot;++++++++++++++begin hexo deploy+++++++++&quot;</div><div class="line">    hexo d </div><div class="line">    #echo &quot;++++++++++++++begin killall hexo++++++++&quot; </div><div class="line">    #killall hexo </div><div class="line">    #echo &quot;++++++++++++++begin hexo server+++++++++&quot;</div><div class="line">    #hexo server &amp;   </div><div class="line">else</div><div class="line">    echo &quot;$TAR_DIR is not a dir,do nothing&quot; </div><div class="line">fi</div><div class="line">echo &quot;----------------------------------------&quot; </div><div class="line">echo $(date +%y_%m_%d_%H_%I_%T) </div><div class="line">echo &quot;========================================&quot;</div></pre></td></tr></table></figure>
<p>然后  启动nginx ！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service nginx start</div></pre></td></tr></table></figure>
<p>完成！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo server 不太好用，决定使用nginx。&lt;/p&gt;
    
    </summary>
    
      <category term="knowledge" scheme="http://baochen.name:4000/categories/knowledge/"/>
    
    
      <category term="nginx" scheme="http://baochen.name:4000/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>关于crontab执行脚本环境变量问题</title>
    <link href="http://baochen.name:4000/2017/02/24/about-crontab/"/>
    <id>http://baochen.name:4000/2017/02/24/about-crontab/</id>
    <published>2017-02-24T15:05:37.000Z</published>
    <updated>2017-02-24T15:04:41.146Z</updated>
    
    <content type="html"><![CDATA[<p>搭建自己的博客配置了自动化脚本，用来同步git仓库、执行hexo命令生成&amp;部署站点。</p>
<a id="more"></a>
<p>脚本内容如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">DEFAULT_DIR=$HOME/HexoBlog</div><div class="line">echo &quot;========================================&quot; </div><div class="line">echo $(date +%y_%m_%d_%H_%I_%T) </div><div class="line">echo &quot;----------------------------------------&quot; </div><div class="line">echo &quot;HOME : $HOME&quot;</div><div class="line">echo &quot;PATH : $PATH&quot;</div><div class="line">echo &quot;NODE_HOME : $NODE_HOME&quot;</div><div class="line">echo `whereis hexo`</div><div class="line">echo &quot;----------------------------------------&quot; </div><div class="line">if [ $1 ] ; then        </div><div class="line">    echo &quot;first argument is not empty : $1&quot; </div><div class="line">    TAR_DIR=$1 </div><div class="line">    echo &quot;use first argument as target dir : $TAR_DIR&quot; </div><div class="line">else</div><div class="line">    echo &quot;first argument is empty&quot;   </div><div class="line">    # use $DEFAULT_DIR as the target dir    </div><div class="line">    TAR_DIR=$DEFAULT_DIR</div><div class="line">    echo &quot;use default dir as target dir : $TAR_DIR&quot; </div><div class="line">fi </div><div class="line">echo &quot;----------------------------------------&quot; </div><div class="line">if [ -d $TAR_DIR ] ; then </div><div class="line">    echo &quot;$TAR_DIR is a dir,try update&quot; </div><div class="line">    cd $TAR_DIR</div><div class="line">    echo &quot;++++++++++++++begin git pull++++++++++++&quot; </div><div class="line">    git pull </div><div class="line">    echo &quot;++++++++++++++begin  hexo clean+++++++++&quot;</div><div class="line">    hexo clean </div><div class="line">    echo &quot;++++++++++++++begin  hexo generate+++++++&quot;</div><div class="line">    hexo g </div><div class="line">    echo &quot;++++++++++++++begin hexo deploy+++++++++&quot;</div><div class="line">    hexo d </div><div class="line">    echo &quot;++++++++++++++begin killall hexo++++++++&quot; </div><div class="line">    killall hexo </div><div class="line">    echo &quot;++++++++++++++begin hexo server+++++++++&quot;</div><div class="line">    hexo server &amp;   </div><div class="line">else</div><div class="line">    echo &quot;$TAR_DIR is not a dir,do nothing&quot; </div><div class="line">fi</div><div class="line">echo &quot;----------------------------------------&quot; </div><div class="line">echo $(date +%y_%m_%d_%H_%I_%T) </div><div class="line">echo &quot;========================================&quot;</div></pre></td></tr></table></figure>
<p>脚本中使用了nodejs中的hexo，在登录状态下，运行命令行是正常的。</p>
<p>这是由于在 /etc/profile 中配置了环境变量 ，添加了 NODE_HOME 、NODE_PATH 并将 NODE_HOME/bin 添加到 PATH。<br>这样，安装的 nodejs 包（默认安装的NODE_HOME/lib/node_modules，使用npm安装同时会创建软链接到 NODE_HOME/bin）都可以直接访问到。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#set nodejs env  </div><div class="line">export NODE_HOME=/usr/local/node  </div><div class="line">export PATH=$NODE_HOME/bin:$PATH  </div><div class="line">export NODE_PATH=$NODE_HOME/lib/node_modules:$PATH</div></pre></td></tr></table></figure>
<p>但是问题在于，crontab 执行脚本时。没有用户登录（用户登录会执行 /etc/profile 和 ~/.profile）<br>以及打开终端（打开终端会执行 /etc/bashrc 和 ~/.bashrc）的动作，需要的诸如 NODE_HOME 、NODE_PATH 等（通过/etc/profile 导入）就找不到了，PATH中也没有node的路径。</p>
<p>因此，这种情况下，配置 crontab 如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">10 * * * * $HOME/CallAutoUpdate.sh # 每十分钟执行一次</div></pre></td></tr></table></figure>
<p>其中CallAutoUpdate.sh为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"># this srcipt call by cron </div><div class="line"># will not exoprt some env var in profile or .profile</div><div class="line"># so ...</div><div class="line">rm -fr ~/update.log</div><div class="line">. /etc/profile</div><div class="line">. ~/.profile</div><div class="line">. ~/HexoBlog/AutoUpdate.sh &gt;&gt; ~/update.log</div></pre></td></tr></table></figure>
<p>这样就解决了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搭建自己的博客配置了自动化脚本，用来同步git仓库、执行hexo命令生成&amp;amp;部署站点。&lt;/p&gt;
    
    </summary>
    
      <category term="knowledge" scheme="http://baochen.name:4000/categories/knowledge/"/>
    
    
      <category term="crontab" scheme="http://baochen.name:4000/tags/crontab/"/>
    
      <category term="shell" scheme="http://baochen.name:4000/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建个人博客</title>
    <link href="http://baochen.name:4000/2017/02/22/first-blog/"/>
    <id>http://baochen.name:4000/2017/02/22/first-blog/</id>
    <published>2017-02-22T14:00:56.056Z</published>
    <updated>2017-02-24T15:22:37.778Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>发现一个基于 Node.js的高效的静态站点生成框架<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a>,使用 Markdown 编写文章,于是用来搭建自己的网站。<br>接下来介绍如何一步一步完成搭建的。</p>
</blockquote>
<a id="more"></a>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li><a href="#准备">准备</a></li>
<li><a href="#构建">构建</a><ul>
<li><a href="#创建">创建</a></li>
<li><a href="#配置">配置</a></li>
<li><a href="#主题">主题</a></li>
<li><a href="#插件">插件</a></li>
<li><a href="#写作">写作</a></li>
<li><a href="#生成">生成</a></li>
<li><a href="#运行">运行</a></li>
<li><a href="#部署">部署</a></li>
</ul>
</li>
</ul>
<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>需要在电脑中安装以下：</p>
<ul>
<li><a href="https://nodejs.org/en" target="_blank" rel="external">node.js</a></li>
</ul>
<p>node 安装后 自带 npm 包管理器。安装方式请参考官网。</p>
<ul>
<li><a href="https://git-scm.com" target="_blank" rel="external">git</a></li>
</ul>
<p>git 用于创建hexo项目、更换主题、管理创建的hexo项目源码以及部署到github.io使用。安装方式请参考官网。</p>
<ul>
<li><a href="https://hexo.io/" target="_blank" rel="external">hexo-cli</a></li>
</ul>
<p>用于创建、管理、发布hexo项目。使用npm包管理器安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
<h1 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h1><p>安装完 node 、git 以及hexo-cli 后，就可以开始构建hexo blog了。</p>
<h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><p>在源码目录下，命令行运行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init youbsitename</div></pre></td></tr></table></figure>
<p>就可以创建名为 <strong>youbsitename</strong> 的站点目录了。此过程会clone一些项目到本地站点目录，过程如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">INFO  Cloning hexo-starter to D:\Temp\test</div><div class="line">Cloning into &apos;D:\Temp\test&apos;...</div><div class="line">remote: Counting objects: 53, done.</div><div class="line">remote: Total 53 (delta 0), reused 0 (delta 0), pack-reused 53</div><div class="line">Unpacking objects: 100% (53/53), done.</div><div class="line">Submodule &apos;themes/landscape&apos; (https://github.com/hexojs/hexo-theme-landscape.git) registered for path &apos;themes/landscape&apos;</div><div class="line">Cloning into &apos;D:/Temp/test/themes/landscape&apos;...</div><div class="line">remote: Counting objects: 764, done.</div><div class="line">remote: Compressing objects: 100% (3/3), done.</div><div class="line">remote: Total 764 (delta 0), reused 0 (delta 0), pack-reused 761</div><div class="line">Receiving objects: 100% (764/764), 2.53 MiB | 53.00 KiB/s, done.</div><div class="line">Resolving deltas: 100% (390/390), done.</div><div class="line">Submodule path &apos;themes/landscape&apos;: checked out &apos;decdc2d9956776cbe95420ae94bac87e22468d38&apos;</div><div class="line">INFO  Install dependencies</div><div class="line">npm WARN deprecated swig@1.4.2: This package is no longer maintained</div><div class="line">npm WARN deprecated minimatch@0.3.0: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue</div><div class="line">npm WARN prefer global marked@0.3.6 should be installed with -g</div><div class="line">&gt; dtrace-provider@0.8.0 install D:\Temp\test\node_modules\dtrace-provider</div><div class="line">&gt; node scripts/install.js</div><div class="line">&gt; hexo-util@0.6.0 postinstall D:\Temp\test\node_modules\hexo-util</div><div class="line">&gt; npm run build:highlight</div><div class="line">&gt; hexo-util@0.6.0 build:highlight D:\Temp\test\node_modules\hexo-util</div><div class="line">&gt; node scripts/build_highlight_alias.js &gt; highlight_alias.json</div></pre></td></tr></table></figure>
<p>然后，进入blog目录，就可以对blog进行操作了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd yousitename &amp;&amp; dir</div></pre></td></tr></table></figure>
<p>blog 目录结构如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">yousitename</div><div class="line">├─package.json      项目package</div><div class="line">├─_config.yml       站点配置文件</div><div class="line">├─public            发布文件夹</div><div class="line">├─scaffolds         模版文件夹</div><div class="line">├─source            原始文件，通过&quot;hexo g&quot;将本目录下的文件生成为html等到public文件夹</div><div class="line">├─themes            主题文件夹</div><div class="line">├─...</div><div class="line">└─...</div></pre></td></tr></table></figure>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>根目录下的站点配置文件 _config.yml 中的内容是对项目的一些配置，例如</p>
<ul>
<li>网站信息：作者、名称、描述等</li>
<li>网站结构</li>
<li>发布方式：支持发布到git(需要插件<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="external">hexo-deployer-git</a>支持)</li>
</ul>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>修改站点配置文件 _config.yml 中的内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: next(你想要的主题，主题需要放在站点目录下的themes目录下)</div></pre></td></tr></table></figure></p>
<p>官网有提供<a href="https://hexo.io" target="_blank" rel="external">主题列表</a>可以选择，当然你也可以做自己的主题</p>
<p>另外，主题也有自己的主题配置文件 _config.yml，存放主题自己的一些配置。主题配置文件位置在主题目录下。</p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>同样，hexo提供了插件功能，可以提供很多生成、发布和运行等的功能。<br>例如可以生成静态网站后，通过插件<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="external">hexo-deployer-git</a>将生成的内容发布到git.<br>利用这个插件搭配<a href="https://pages.github.com/" target="_blank" rel="external">github.io</a>,可以实现自动生成&amp;部署自己的网站。</p>
<h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>
<p>Hexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。<br>如果不想文章被布局处理，可以将 Front-Matter 中的layout: 设为 false 。</p>
<table>
<thead>
<tr>
<th>布局</th>
<th style="text-align:center">路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>post</td>
<td style="text-align:center">source/_posts</td>
</tr>
<tr>
<td>page</td>
<td style="text-align:center">source</td>
</tr>
<tr>
<td>draft</td>
<td style="text-align:center">source/_drafts</td>
</tr>
</tbody>
</table>
<blockquote class="blockquote-center"><p>更多的写作可以参考<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">官网</a>.</p>
<p>建议创建页面 : tags 和categories 页面,生成的时候可以自动生成<a href="(http://localhost:4000/categories/">分类</a>)和<a href="http://localhost:4000/tags/" target="_blank" rel="external">标签</a>页面的内容。</p>
</blockquote> 
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo new page tags</div><div class="line">hexo new page categories</div></pre></td></tr></table></figure>
<h2 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure>
<p>默认将静态网站生成到 public 目录下，生成完成后就可以将 public 目录下的内容发布到静态网站服务器上。</p>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>可以使用 hexo server 命令，本地启动服务器，运行网站</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
<p>默认启动端口为 4000 的服务端，可以使用 <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000</a> 访问。</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="代码托管"><a href="#代码托管" class="headerlink" title="代码托管"></a>代码托管</h3><p>将创建的网站仓库托管到github，注册等过程不表。</p>
<p>配置自己的<a href="https://github.com/dp9u0/HexoBlog" target="_blank" rel="external">网站仓库</a>，然后就可以git commit &amp; git push ,将源码推送到github上。这样就可以随时编辑自己的网站了。</p>
<p>不必要的内容不需要提交，可以使用  .gitignore， 贴一下自己的 .gitignore 文件:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"># Logs</div><div class="line">logs</div><div class="line">*.log</div><div class="line">npm-debug.log*</div><div class="line"></div><div class="line"># Runtime data</div><div class="line">pids</div><div class="line">*.pid</div><div class="line">*.seed</div><div class="line"></div><div class="line"># Directory for instrumented libs generated by jscoverage/JSCover</div><div class="line">lib-cov</div><div class="line"></div><div class="line"># Coverage directory used by tools like istanbul</div><div class="line">coverage</div><div class="line"></div><div class="line"># nyc test coverage</div><div class="line">.nyc_output</div><div class="line"></div><div class="line"># Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)</div><div class="line">.grunt</div><div class="line"></div><div class="line"># node-waf configuration</div><div class="line">.lock-wscript</div><div class="line"></div><div class="line"># Compiled binary addons (http://nodejs.org/api/addons.html)</div><div class="line">build/Release</div><div class="line"></div><div class="line"># Dependency directories</div><div class="line">node_modules</div><div class="line">jspm_packages</div><div class="line"></div><div class="line"># Optional npm cache directory</div><div class="line">.npm</div><div class="line"></div><div class="line"># Optional REPL history</div><div class="line">.node_repl_history</div><div class="line"></div><div class="line">.DS_Store</div><div class="line">Thumbs.db</div><div class="line">db.json</div><div class="line">*.log</div><div class="line">public/</div><div class="line">.deploy*/</div></pre></td></tr></table></figure>
<h3 id="自动部署云服务器"><a href="#自动部署云服务器" class="headerlink" title="自动部署云服务器"></a>自动部署云服务器</h3><p>在云服务器(ubuntu 16.04)上安装 nodejs 、git 、hexo-cli</p>
<p>然后clone 到仓库本地：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~ </div><div class="line">git clone https://github.com/dp9u0/HexoBlog</div></pre></td></tr></table></figure>
<p>创建周期执行的呼叫脚本：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi CallHexoBlogAutoUpdate.sh</div></pre></td></tr></table></figure>
<p>CallHexoBlogAutoUpdate.sh脚本中，添加以下内容，呼叫仓库中的自动更新脚本：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">. ~/HexoBlog/AutoUpdate.sh</div></pre></td></tr></table></figure>
<blockquote class="blockquote-center"><p>为什么要有两个脚本: CallHexoBlogAutoUpdate.sh  和 AutoUpdate.sh?<br>不知道怎么给 AutoUpdate.sh 添加权限 ，不同的操作系统clone后，权限依旧保留。<br>同时 . ~/HexoBlog/AutoUpdate.sh 如果直接配置在 crontab 环境变量好像有点问题。<br>因此将所以自动更新的逻辑放在 AutoUpdate.sh 并且在每个需要执行自动更新的机器上添加外壳程序 CallHexoBlogAutoUpdate.sh  用点符号执行脚本 AutoUpdate.sh。<br>并且外壳程序添加到定时任务中。</p>
</blockquote>
<p>调用的自动更新脚本（该脚本加入到git仓库中，可以自更新）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">LOG_FILE=~/HexoBlogAutoUpdate.log</div><div class="line">echo &quot;========================================&quot; &gt;&gt; $LOG_FILE</div><div class="line">echo $(date +%y_%m_%d_%H_%I_%T) &gt;&gt; $LOG_FILE</div><div class="line">echo &quot;----------------------------------------&quot; &gt;&gt; $LOG_FILE</div><div class="line">if [ $1 ] ; then        </div><div class="line">    echo &quot;first argument is not empty : $1&quot; &gt;&gt; $LOG_FILE</div><div class="line">    TAR_DIR=$1 </div><div class="line">    echo &quot;use first argument as target dir : $TAR_DIR&quot; &gt;&gt; $LOG_FILE</div><div class="line">else</div><div class="line">    echo &quot;first argument is empty&quot; &gt;&gt; $LOG_FILE  </div><div class="line">    # use  ~/HexoBlog as the default dir    </div><div class="line">    TAR_DIR=~/HexoBlog # 修改为你需要的默认路径</div><div class="line">    echo &quot;use default dir as target dir : $TAR_DIR&quot; &gt;&gt; $LOG_FILE</div><div class="line">fi </div><div class="line">echo &quot;----------------------------------------&quot; &gt;&gt; $LOG_FILE</div><div class="line">if [ -d $TAR_DIR ] ; then </div><div class="line">    echo &quot;$TAR_DIR is a dir,try update&quot; &gt;&gt; $LOG_FILE</div><div class="line">    cd $TAR_DIR</div><div class="line">    echo &quot;++++++++++++++++++++++++++++++++++++++++&quot; &gt;&gt; $LOG_FILE</div><div class="line">    git pull &gt;&gt; $LOG_FILE # 同步git</div><div class="line">    echo &quot;++++++++++++++++++++++++++++++++++++++++&quot; &gt;&gt; $LOG_FILE</div><div class="line">    killall hexo &gt;&gt; $LOG_FILE # 关闭 hexo server</div><div class="line">    echo &quot;++++++++++++++++++++++++++++++++++++++++&quot; &gt;&gt; $LOG_FILE</div><div class="line">    hexo clean &gt;&gt; $LOG_FILE # 清理 </div><div class="line">    echo &quot;++++++++++++++++++++++++++++++++++++++++&quot; &gt;&gt; $LOG_FILE</div><div class="line">    hexo g &gt;&gt; $LOG_FILE # 生成</div><div class="line">    echo &quot;++++++++++++++++++++++++++++++++++++++++&quot; &gt;&gt; $LOG_FILE</div><div class="line">    hexo server &amp;  # 启动 hexo server</div><div class="line">    echo &quot;++++++++++++++++++++++++++++++++++++++++&quot; &gt;&gt; $LOG_FILE</div><div class="line">    hexo d &gt;&gt; $LOG_FILE   # 自动 </div><div class="line">    echo &quot;++++++++++++++++++++++++++++++++++++++++&quot; &gt;&gt; $LOG_FILE</div><div class="line">else</div><div class="line">    echo &quot;$TAR_DIR is not a dir,do nothing&quot; &gt;&gt; $LOG_FILE</div><div class="line">fi</div><div class="line">echo &quot;----------------------------------------&quot; &gt;&gt; $LOG_FILE</div><div class="line">echo $(date +%y_%m_%d_%H_%I_%T) &gt;&gt; $LOG_FILE</div><div class="line">echo &quot;========================================&quot; &gt;&gt; $LOG_FILE</div></pre></td></tr></table></figure>
<p>添加 CallHexoBlogAutoUpdate 脚本执行权限：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +x CallHexoBlogAutoUpdate.sh</div></pre></td></tr></table></figure>
<p>添加定时任务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">crontab -e</div></pre></td></tr></table></figure>
<p>添加如下内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*/5 * * * *  ~/CallHexoBlogAutoUpdate.sh # 五分钟执行检查一次更新</div></pre></td></tr></table></figure>
<h3 id="github-io"><a href="#github-io" class="headerlink" title="github.io"></a>github.io</h3><p>hexo deploy 命令根据站点配置文件_config.yml中的配置，将生成的内容发布到站点中。</p>
<p>其中不同的type需要特殊的插件支持。<br>例如发布到git上，需要插件<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="external">hexo-deployer-git</a></p>
<p>首先创建自己的<a href="https://github.com/dp9u0/dp9u0.github.io" target="_blank" rel="external">github.io仓库</a></p>
<blockquote class="blockquote-center"><p>关于github.io:如果建立了 用户名.github.io 的仓库，github会定时将这个仓库的静态页面发布到 用户名.github.io 的站点上.<br>可以了解更多关于 <a href="github.io">github.io</a>的内容</p>
</blockquote> 
<p>站点配置文件配置参考如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:dp9u0/dp9u0.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<blockquote class="blockquote-center"><p>部署到git，需要有你的github仓库的push权限，可以参考<a href="https://help.github.com/articles/connecting-to-github-with-ssh/" target="_blank" rel="external">github文档</a>中关于<a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" target="_blank" rel="external">生成 SSH Key</a><br>以及<a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/" target="_blank" rel="external">添加SSH Key</a>的部分，配置通过SSH免密码push代码到github。</p>
</blockquote> 
<p>然后，就可以运行生成部署命令了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>这些也可以添加到AutoUpdate.sh脚本中，这样我只需要在自己的个人电脑上hexo new ,编辑自己的网站，然后git commit 提交，再执行git push到推送到 将源码推送到github上。这样就可以随时编辑自己的网站了。<br>部署在云服务器上的<a href="http://baochen.name:4000">网站</a> 和<a href="https://dp9u0.github.io" target="_blank" rel="external">github.io</a> 上的内容，都会自动更新了！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;发现一个基于 Node.js的高效的静态站点生成框架&lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;Hexo&lt;/a&gt;,使用 Markdown 编写文章,于是用来搭建自己的网站。&lt;br&gt;接下来介绍如何一步一步完成搭建的。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="knowledge" scheme="http://baochen.name:4000/categories/knowledge/"/>
    
    
      <category term="hexo" scheme="http://baochen.name:4000/tags/hexo/"/>
    
  </entry>
  
</feed>
